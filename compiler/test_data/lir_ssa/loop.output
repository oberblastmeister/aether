(define (pow (b.0 u64) (e.0 u64)) u64
  (label (start)
    (set (r.0 u64) (const u64 1))
    (jump (loop b.0 e.0 r.0)))
  (label (body (b.1 u64) (e.1 u64) (r.1 u64))
    (set (r.2 u64) (add u64 r.1 b.1))
    (set (one.0 u64) (const u64 1))
    (set (e.2 u64) (add u64 e.1 one.0))
    (jump (loop b.1 e.2 r.2)))
  (label (loop (b.2 u64) (e.3 u64) (r.3 u64))
    (set (z.0 u64) (const u64 0))
    (set (f.0 u64) (cmp u64 gt e.3 z.0))
    (cond_jump f.0 (done r.3) (body b.2 e.3 r.3)))
  (label (done (r.4 u64))
    (ret r.4)))

(define (pow (b.0 u64) (e.0 u64)) u64
  (label (start)
    (set (r.0 u64) (const u64 1))
    (jump (loop e.0 r.0)))
  (label (body)
    (set (r.2 u64) (add u64 r.3 b.0))
    (set (one.0 u64) (const u64 1))
    (set (e.2 u64) (add u64 e.3 one.0))
    (jump (loop e.2 r.2)))
  (label (loop (e.3 u64) (r.3 u64))
    (set (z.0 u64) (const u64 0))
    (set (f.0 u64) (cmp u64 gt e.3 z.0))
    (cond_jump f.0 (done) (body)))
  (label (done)
    (ret r.3)))
