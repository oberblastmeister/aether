cabal-version:      3.4
name:               compiler
version:            0.1.0.0
license:            MIT
license-file:       LICENSE
author:             brian
maintainer:         littlebubu.shu@gmail.com
build-type:         Simple

common common-flags
  -- dependent haskell!
  default-extensions:
    FlexibleInstances,
    FlexibleContexts,
    InstanceSigs,
    MultiParamTypeClasses,
    ConstraintKinds,
    LambdaCase,
    EmptyCase,
    TupleSections,
    BangPatterns,
    TypeApplications,
    StandaloneDeriving,
    RankNTypes,
    ScopedTypeVariables,
    NamedFieldPuns,
    DuplicateRecordFields,
    GeneralizedNewtypeDeriving,
    DataKinds,
    ConstraintKinds,
    TypeApplications,
    KindSignatures,
    StandaloneKindSignatures,
    DeriveFoldable,
    DeriveFunctor,
    DeriveGeneric,
    DeriveLift,
    DeriveTraversable ,
    BlockArguments,
    GADTs,
    QuantifiedConstraints,
    PolyKinds,
    ViewPatterns,
    PatternSynonyms,
    TypeFamilies,
    FunctionalDependencies,
    ExistentialQuantification,
    TypeOperators,
    NoFieldSelectors,
    OverloadedLabels,
    OverloadedRecordDot,
    StrictData,
    TypeData,
  default-language: GHC2021
  ghc-options:
    -fdiagnostics-color=always
    -Wall
    -Wincomplete-record-updates
    -Wredundant-constraints
    -Wno-name-shadowing
    -Werror=incomplete-patterns
    -Werror=incomplete-uni-patterns
    -Werror=missing-methods
    -Wno-missing-signatures
  build-depends: 
    base >= 4.17,
    ffi,
    text >= 2.1,
    hashable,
    filepath >= 1.4.100.4,
    random,
    temporary,
    directory,
    bytestring,
    vector,
    deepseq,
    mtl,
    containers,
    unordered-containers,
    primitive >= 0.9.0.0,
    optics,
    pretty-simple,
    prettyprinter,
    megaparsec,
    parser-combinators,
    typed-process,
    text-builder-linear,
    these,
    effectful,
    effectful-core,
    heaps,
    some,

library
  import: common-flags
  exposed-modules:
    Sexp
      Sexp.Syntax
      Sexp.Parser
    Effects.Fresh
    Imports
      Imports.Optics
      Imports.Dot
      Imports.Debug
      Imports.Panic
      Imports.Data
      Imports.Monad
      Imports.Functor
      Imports.Function
      Imports.Traversable
      Imports.Kind
    Cfg
      Cfg.Graph
      Cfg.Types
      Cfg.Dataflow
    Lir
      Lir.Ssa
      Lir.Instr
      Lir.Pretty
      Lir.Sexp
      Lir.Elaborate
      Lir.ToTree
    Cp
      Cp.Check
      Cp.Parser
      Cp.Syntax
      Cp.Driver
      Cp.Backend.C
      Cp.Backend.Lir
    Data.BigGraph
    Data.IdMap
    Data.ToInt
    Data.BitSet
    Data.Intern
    Data.TextUtils
    Data.NonDet.Class
    Data.NonDet.Set
    Data.NonDet.Map
    Data.Str
    Data.Deque
    Data.HashSetDeque
  hs-source-dirs:   compiler/src
  include-dirs:
    compiler/include

common rtsopts
  ghc-options:
    -threaded
    -rtsopts
    -with-rtsopts=-N

executable genapply
  import: common-flags, rtsopts
  main-is: Main.hs
  build-depends: compiler
  hs-source-dirs: compiler/genapply

executable compiler
  import: common-flags, rtsopts
  main-is:          Main.hs
  build-depends:
    compiler
  hs-source-dirs:   compiler/app

test-suite compiler-test
  import: common-flags, rtsopts
  type:             exitcode-stdio-1.0
  hs-source-dirs:   compiler/test
  main-is:          Main.hs
  other-modules:
    CpTest
    SexpTest
    LirTest
    Snapshot
  build-depends:
    compiler,
    tasty,
    tasty-hunit,
    tasty-golden,

benchmark compiler-bench
  import: common-flags
  type: exitcode-stdio-1.0
  hs-source-dirs: compiler/bench/
  main-is: Main.hs
  ghc-options: -O2
  build-depends:
    compiler,
    tasty-bench,
